{"mappings":"AAAA,MAAMA,EAAU,CACd,MACA,KACA,MACA,SACA,SACA,UAKIC,EAAS,GAEf,IAAK,MAAMC,KAAUF,EAAS,CAC5B,MAAMG,EAAQC,SAASC,cAAc,SACrCF,EAAMG,UAAUC,IAAI,UACpBJ,EAAMK,aAAa,UAAW,QAE9B,MAAMC,EAASL,SAASC,cAAc,UACtCI,EAAOC,IAAG,GAAMR,QAEhBC,EAAMQ,YAAYF,GAClBL,SAASQ,KAAKD,YAAYR,GAE1BF,EAAOC,GAAUC,EAGnB,IAAIU,GAAY,EAChB,MAAMC,EAAiBV,SAASC,cAAc,OAC9CS,EAAeR,UAAUC,IAAI,mBAE7B,MAAMQ,EAAYX,SAASC,cAAc,OACzCU,EAAUL,IAAM,aAChBK,EAAUC,QAAO,KACfC,EAAW,UACXC,EAAYC,QACZJ,EAAUT,UAAUC,IAAI,UACxBa,EAAQd,UAAUe,OAAO,UACzBR,GAAY,GAGd,MAAMO,EAAUhB,SAASC,cAAc,gBAiB9BY,EAAWf,GAClBoB,OAAOC,OAAOtB,GAAQuB,SAASrB,IAC7BA,EAAMG,UAAUC,IAAI,UACpBJ,EAAMsB,QACNtB,EAAMuB,YAAc,KAEtBzB,EAAOC,GAAQI,UAAUe,OAAO,UAChCpB,EAAOC,GAAQyB,OAvBjBP,EAAQV,IAAM,aACdU,EAAQd,UAAUC,IAAI,UACtBa,EAAQJ,QAAO,KACbC,EAAW,UACXC,EAAYU,OACZR,EAAQd,UAAUC,IAAI,UACtBQ,EAAUT,UAAUe,OAAO,UAC3BR,GAAY,GAGdC,EAAeH,YAAYI,GAC3BD,EAAeH,YAAYS,GAC3BhB,SAASQ,KAAKiB,OAAOf,GAErBb,EAAO6B,OAAOxB,UAAUe,OAAO,UAiB/B,MACMH,EAAc,IADMa,OAAOC,mBAAqBD,OAAOE,yBAE7DC,QAAQC,IAAIjB,GAEZA,EAAYkB,gBAAiB,EAE7BlB,EAAYmB,iBAAiB,UAAWC,IACtC,MAAMC,EAAUD,EAAME,QAAQ,GAAGD,QAC3BE,EAAUC,MAAMC,KAAKL,EAAME,SAC9BI,KAAIC,GAAUA,EAAO,KACrBD,KAAIC,GAAUA,EAAOC,aACrBC,KAAK,IAIR,GAFAb,QAAQC,IAAIM,GAERF,EAAS,CACX,MAAMS,GArBSC,EAqBe,EArBFC,EAqBKlD,EAAQmD,OAAS,EApB7CC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAqBlDhC,EAAWjB,EAAQgD,QAtBJC,EAAaC,KA0BhChC,EAAYmB,iBAAiB,OAAK,KAC3BxB,GACLK,EAAYC","sources":["src/index.ts"],"sourcesContent":["const answers = [\n  'agh',\n  'no',\n  'yes',\n  'hohoho',\n  'hangup',\n  'pickup'\n] as const\n\ntype Answers = typeof answers[number]\n\nconst videos = {} as Record<Answers, HTMLVideoElement>\n\nfor (const answer of answers) {\n  const video = document.createElement('video')\n  video.classList.add('hidden')\n  video.setAttribute('preload', 'auto')\n\n  const source = document.createElement('source')\n  source.src = `${answer}.mp4`\n\n  video.appendChild(source)\n  document.body.appendChild(video)\n\n  videos[answer] = video\n}\n\nlet hasEnable = false\nconst phoneContainer = document.createElement('div')\nphoneContainer.classList.add('phone-container')\n\nconst callStart = document.createElement('img')\ncallStart.src = 'pickup.png'\ncallStart.onclick = () => {\n  playAnswer('pickup')\n  recognition.start()\n  callStart.classList.add('hidden')\n  callEnd.classList.remove('hidden')\n  hasEnable = true\n}\n\nconst callEnd = document.createElement('img')\ncallEnd.src = 'hangup.png'\ncallEnd.classList.add('hidden')\ncallEnd.onclick = () => {\n  playAnswer('hangup')\n  recognition.stop()\n  callEnd.classList.add('hidden')\n  callStart.classList.remove('hidden')\n  hasEnable = false\n}\n\nphoneContainer.appendChild(callStart)\nphoneContainer.appendChild(callEnd)\ndocument.body.append(phoneContainer)\n\nvideos.pickup.classList.remove('hidden')\n\nfunction playAnswer(answer: Answers): void {\n  Object.values(videos).forEach((video) => {\n    video.classList.add('hidden')\n    video.pause()\n    video.currentTime = 0\n  })\n  videos[answer].classList.remove('hidden')\n  videos[answer].play()\n}\n\nfunction randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n// TODO: fix types\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition()\nconsole.log(recognition)\n\nrecognition.interimResults = true\n\nrecognition.addEventListener('result', (event) => {\n  const isFinal = event.results[0].isFinal\n  const message = Array.from(event.results)\n    .map(result => result[0])\n    .map(result => result.transcript)\n    .join('')\n\n  console.log(message)\n\n  if (isFinal) {\n    const answerIndex = randomInt(0, answers.length - 3)\n    playAnswer(answers[answerIndex])\n  }\n})\n\nrecognition.addEventListener('end', () => {\n  if (!hasEnable) return\n  recognition.start()\n})\n"],"names":["$b4e14b6b8da86996$var$answers","$b4e14b6b8da86996$var$videos","answer","video","document","createElement","classList","add","setAttribute","source","src","appendChild","body","$b4e14b6b8da86996$var$hasEnable","$b4e14b6b8da86996$var$phoneContainer","$b4e14b6b8da86996$var$callStart","onclick","$b4e14b6b8da86996$var$playAnswer","$b4e14b6b8da86996$var$recognition","start","$b4e14b6b8da86996$var$callEnd","remove","Object","values","forEach","pause","currentTime","play","stop","append","pickup","window","SpeechRecognition","webkitSpeechRecognition","console","log","interimResults","addEventListener","event","isFinal","results","message","Array","from","map","result","transcript","join","answerIndex","min","max","length","Math","floor","random"],"version":3,"file":"index.0ba9a768.js.map"}