{"mappings":"AAAA,MAAMA,EAAU,CACd,MACA,KACA,MACA,SACA,SACA,UAKIC,EAAS,GAEf,IAAK,MAAMC,KAAUF,EAAS,CAC5B,MAAMG,EAAQC,SAASC,cAAc,SACrCF,EAAMG,UAAUC,IAAI,UACpBJ,EAAMK,aAAa,UAAW,QAE9B,MAAMC,EAASL,SAASC,cAAc,UACtCI,EAAOC,IAAG,GAAMR,QAEhBC,EAAMQ,YAAYF,GAClBL,SAASQ,KAAKD,YAAYR,GAE1BF,EAAOC,GAAUC,EAGnB,MAAMU,EAAiBT,SAASC,cAAc,OAC9CQ,EAAeP,UAAUC,IAAI,mBAE7B,MAAMO,EAAYV,SAASC,cAAc,OACzCS,EAAUJ,IAAM,aAChBI,EAAUC,QAAO,KACfC,EAAYC,QACZH,EAAUR,UAAUC,IAAI,UACxBW,EAAQZ,UAAUa,OAAO,WAG3B,MAAMD,EAAUd,SAASC,cAAc,gBAe9Be,EAAWlB,GAClBmB,OAAOC,OAAOrB,GAAQsB,SAASpB,IAC7BA,EAAMG,UAAUC,IAAI,UACpBJ,EAAMqB,QACNrB,EAAMsB,YAAc,KAEtBxB,EAAOC,GAAQI,UAAUa,OAAO,UAChClB,EAAOC,GAAQwB,OArBjBR,EAAQR,IAAM,aACdQ,EAAQZ,UAAUC,IAAI,UACtBW,EAAQH,QAAO,KACbC,EAAYW,OACZT,EAAQZ,UAAUC,IAAI,UACtBO,EAAUR,UAAUa,OAAO,WAG7BN,EAAeF,YAAYG,GAC3BD,EAAeF,YAAYO,GAC3Bd,SAASQ,KAAKgB,OAAOf,GAErBZ,EAAO4B,OAAOvB,UAAUa,OAAO,UAiB/B,MACMH,EAAc,IADMc,OAAOC,mBAAqBD,OAAOE,yBAE7DC,QAAQC,IAAIlB,GAEZA,EAAYmB,YAAa,EAEzBnB,EAAYoB,SAAYC,IACtB,MAAMC,EAAcD,EAAMC,YACpBC,EAAaF,EAAMG,QAAQF,GAAa,GAAGC,WACjDN,QAAQC,IAAIK,GACZ,MAAME,GAfWC,EAea,EAfAC,EAeG3C,EAAQ4C,OAAS,EAd3CC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,QADnCA,EAAaC,EAgB9BvB,EAAWpB,EAAQyC,KAGrBzB,EAAYgC,QAAO,KACjB5B,EAAW,WAGbJ,EAAYiC,YAAW,KACrB7B,EAAW,WAGbJ,EAAYkC,MAAK,KACf9B,EAAW","sources":["src/index.ts"],"sourcesContent":["const answers = [\n  'agh',\n  'no',\n  'yes',\n  'hohoho',\n  'hangup',\n  'pickup'\n] as const\n\ntype Answers = typeof answers[number]\n\nconst videos = {} as Record<Answers, HTMLVideoElement>\n\nfor (const answer of answers) {\n  const video = document.createElement('video')\n  video.classList.add('hidden')\n  video.setAttribute('preload', 'auto')\n\n  const source = document.createElement('source')\n  source.src = `${answer}.mp4`\n\n  video.appendChild(source)\n  document.body.appendChild(video)\n\n  videos[answer] = video\n}\n\nconst phoneContainer = document.createElement('div')\nphoneContainer.classList.add('phone-container')\n\nconst callStart = document.createElement('img')\ncallStart.src = 'pickup.png'\ncallStart.onclick = () => {\n  recognition.start()\n  callStart.classList.add('hidden')\n  callEnd.classList.remove('hidden')\n}\n\nconst callEnd = document.createElement('img')\ncallEnd.src = 'hangup.png'\ncallEnd.classList.add('hidden')\ncallEnd.onclick = () => {\n  recognition.stop()\n  callEnd.classList.add('hidden')\n  callStart.classList.remove('hidden')\n}\n\nphoneContainer.appendChild(callStart)\nphoneContainer.appendChild(callEnd)\ndocument.body.append(phoneContainer)\n\nvideos.pickup.classList.remove('hidden')\n\nfunction playAnswer(answer: Answers): void {\n  Object.values(videos).forEach((video) => {\n    video.classList.add('hidden')\n    video.pause()\n    video.currentTime = 0\n  })\n  videos[answer].classList.remove('hidden')\n  videos[answer].play()\n}\n\nfunction randomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n// TODO: fix types\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition()\nconsole.log(recognition)\n\nrecognition.continuous = true\n\nrecognition.onresult = (event) => {\n  const resultIndex = event.resultIndex\n  const transcript = event.results[resultIndex][0].transcript\n  console.log(transcript)\n  const answerIndex = randomInt(0, answers.length - 3)\n  playAnswer(answers[answerIndex])\n}\n\nrecognition.onstart = () => {\n  playAnswer('pickup')\n}\n\nrecognition.onspeechend = () => {\n  playAnswer('hangup')\n}\n\nrecognition.onend = () => {\n  playAnswer('hangup')\n}\n"],"names":["$b4e14b6b8da86996$var$answers","$b4e14b6b8da86996$var$videos","answer","video","document","createElement","classList","add","setAttribute","source","src","appendChild","body","$b4e14b6b8da86996$var$phoneContainer","$b4e14b6b8da86996$var$callStart","onclick","$b4e14b6b8da86996$var$recognition","start","$b4e14b6b8da86996$var$callEnd","remove","$b4e14b6b8da86996$var$playAnswer","Object","values","forEach","pause","currentTime","play","stop","append","pickup","window","SpeechRecognition","webkitSpeechRecognition","console","log","continuous","onresult","event","resultIndex","transcript","results","answerIndex","min","max","length","Math","floor","random","onstart","onspeechend","onend"],"version":3,"file":"index.4cfa0961.js.map"}